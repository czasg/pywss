name: Python CI

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:
  test:
    runs-on: ubuntu-latest  # 使用最新稳定版而不是具体版本号
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]  # 简化为主要版本号
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4  # 使用更新的v4版本
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov  # 合并coverage和pytest安装
        pip install -e .  # 使用可编辑安装替代setup.py install
    
    - name: Run tests with coverage
      run: |
        pytest --cov=./ --cov-report=xml
        # 将覆盖率数据转换为通用格式
        python -m coverage xml -i
    
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ matrix.python-version }}
        path: coverage.xml

  upload-coverage:
    needs: test  # 等待所有test任务完成
    runs-on: ubuntu-latest
    steps:
      - name: Download all coverage artifacts
        uses: actions/download-artifact@v3
        with:
          path: coverage-artifacts

      - name: Combine coverage reports
        run: |
          pip install coverage
          # 合并所有覆盖率文件
          python -m coverage combine coverage-artifacts/coverage-*
          # 生成最终报告
          python -m coverage xml

      - name: Codecov
        run: bash <(curl -s https://codecov.io/bash)
